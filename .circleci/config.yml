version: 2.1
commands:
  notify_error:
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1
  notify_pass:
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1
  destroy-environment:
    description: Destroy  infrastructure on fail
    steps:
      - run:
          name: Destroy Backen Environment
          command: |
            aws delete-stack --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}"
      - run:
          name: Destroy Frontend Environment
          command: |
            aws delete-stack --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}"
orbs:
  slack: circleci/slack@4.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build Front-End
          command: |
            cd frontend
            npm install
            npm run build
      - notify_error
      - notify_pass
  build-backend: 
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build Back-End
          command: |
            cd backend
            npm install
            npm run build
      - notify_error
      - notify_pass
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Test Front-End
          command: |
            cd frontend
            npm install
            npm run test
      - notify_error
      - notify_pass
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Test Back-End
          command: |
            cd backend
            npm install
            npm run test
      - notify_error
      - notify_pass
  scan-frontend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Scan Front-End
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical  --force
            npm audit --audit-level=critical
      - notify_error
      - notify_pass
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Scan Back-End
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - notify_error
      - notify_pass
  deploy-infrastructure:
    docker: 
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure Backend Infrastructure Exists
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/backend.yml \
            --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides  ID= "${CIRCLE_WORKFLOW_ID:0:7}" \
            --tags project=udapeople
      - run:
          name: Ensure Backend Infrastructure Exists
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/frontend \
            --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides ID= "${CIRCLE_WORKFLOW_ID:0:7}" \
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
      - destroy-environment
        when: on_fail
workflows:
  default:
    jobs:
      - build-frontend:
          context: CircleBot
      - build-backend:
          context: CircleBot
      - test-frontend:
          context: CircleBot
          requires: [build-frontend]
      - test-backend:
          context: CircleBot
          requires: [build-backend]
      - scan-frontend:
          context: CircleBot
          requires: [build-frontend]
      - scan-backend:
          context: CircleBot
          requires: [build-backend]
      - deploy-infrastructure:
          context: CircleBot
          requires: 
            - test-backend
            - test-frontend
            - scan-backend
            - scan-frontend

